[2017-01-14 01:09:45] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"f9f9ba6"}
[2017-01-14 01:09:52] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"18ab9e2"}
[2017-01-14 01:09:52] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"b92bc9d"}
[2017-01-14 01:09:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"c7c61da"}
[2017-01-14 01:09:53] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' AND (NIK_SAP LIKE '%43/4321/0815/4258%' OR NIK_NASIONAL LIKE '%43/4321/0815/4258%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"ad6000a"}
[2017-01-14 01:10:01] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"288b54e"}
[2017-01-14 01:10:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"a38d4c8"}
[2017-01-14 01:10:07] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"b432962"}
[2017-01-14 01:10:08] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"926201a"}
[2017-01-14 01:10:08] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' AND (NIK_SAP LIKE '%43/4321/0815/4258%' OR NIK_NASIONAL LIKE '%43/4321/0815/4258%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"34c52b8"}
[2017-01-14 01:10:10] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0815/4258%' OR NIK_NASIONAL LIKE '%43/4321/0815/4258%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"49a38af"}
[2017-01-14 01:10:10] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/0815/4258' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/0815/4258' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"1b53156"}
[2017-01-14 01:10:11] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"162fa81"}
[2017-01-14 01:11:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"7793fe6"}
[2017-01-14 01:11:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"3dc06ee"}
[2017-01-14 01:11:38] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"84f4a52"}
[2017-01-14 01:11:39] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"b01414b"}
[2017-01-14 01:12:12] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"e714cf7"}
[2017-01-14 01:12:12] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"18957cb"}
[2017-01-14 01:12:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"757a945"}
[2017-01-14 01:12:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"8ae6c07"}
[2017-01-14 01:13:02] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"66949da"}
[2017-01-14 01:13:02] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"959e599"}
[2017-01-14 01:13:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"077457a"}
[2017-01-14 01:13:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"0d62b2f"}
[2017-01-14 01:13:59] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0815/4258%' OR NIK_NASIONAL LIKE '%43/4321/0815/4258%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"d1d85b4"}
[2017-01-14 01:14:00] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"d0adc89"}
[2017-01-14 01:14:00] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"d85cd13"}
[2017-01-14 01:14:01] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"cb90ab7"}
[2017-01-14 01:15:27] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"12cbf38"}
[2017-01-14 01:15:27] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"c5fec78"}
[2017-01-14 01:15:28] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"5573b22"}
[2017-01-14 01:15:28] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"f296a66"}
[2017-01-14 01:15:29] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"d483f26"}
[2017-01-14 01:15:29] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"996eed8"}
[2017-01-14 01:17:04] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"30913f2"}
[2017-01-14 01:17:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"8c84c8c"}
[2017-01-14 01:17:09] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"fbc3edd"}
[2017-01-14 01:17:12] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0815/4258%' OR NIK_NASIONAL LIKE '%43/4321/0815/4258%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"6160c96"}
[2017-01-14 01:17:12] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/0815/4258' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/0815/4258' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"ca8e5d1"}
[2017-01-14 01:17:13] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"2b00220"}
[2017-01-14 01:17:48] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"4937048"}
[2017-01-14 01:17:48] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"f390930"}
[2017-01-14 01:17:49] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0913/2132%' OR NIK_NASIONAL LIKE '%43/4321/0913/2132%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"2ae442a"}
[2017-01-14 01:17:49] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/0913/2132' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/0913/2132' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"bdbb249"}
[2017-01-14 01:17:50] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"5e7237a"}
[2017-01-14 01:19:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"c0a7cb0"}
[2017-01-14 01:19:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"6d8645e"}
[2017-01-14 01:19:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"01c7160"}
[2017-01-14 01:19:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"84e623f"}
[2017-01-14 01:20:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"3d1333a"}
[2017-01-14 01:20:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"76586bc"}
[2017-01-14 01:20:56] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"712c69e"}
[2017-01-14 01:20:56] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"ce0c008"}
[2017-01-14 01:21:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"76adb52"}
[2017-01-14 01:21:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"aa29edf"}
[2017-01-14 01:21:38] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"3b34c90"}
[2017-01-14 01:21:38] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"1d28c77"}
[2017-01-14 01:22:16] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0913/2132%' OR NIK_NASIONAL LIKE '%43/4321/0913/2132%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"1a70c80"}
[2017-01-14 01:22:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"4c8d3ad"}
[2017-01-14 01:22:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"e07c726"}
[2017-01-14 01:22:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"c31f998"}
[2017-01-14 01:23:08] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"3d7a144"}
[2017-01-14 01:23:08] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"e526cb9"}
[2017-01-14 01:23:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"05b892e"}
[2017-01-14 01:23:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"9e6df8d"}
[2017-01-14 01:23:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"8c511f6"}
[2017-01-14 01:23:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"e40bf32"}
[2017-01-14 01:24:16] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"6864c39"}
[2017-01-14 01:24:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"dcdcb29"}
[2017-01-14 01:24:23] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"5978e94"}
[2017-01-14 01:24:26] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0913/2132%' OR NIK_NASIONAL LIKE '%43/4321/0913/2132%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"7d69ef3"}
[2017-01-14 01:24:27] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/0913/2132' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/0913/2132' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"b30d5e7"}
[2017-01-14 01:24:28] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"20d5fc0"}
[2017-01-14 01:25:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"2cd3c04"}
[2017-01-14 01:25:58] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"727f741"}
[2017-01-14 01:25:59] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0813/37%' OR NIK_NASIONAL LIKE '%43/4321/0813/37%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"9c65f16"}
[2017-01-14 01:25:59] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/0813/37' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/0813/37' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"5626bd6"}
[2017-01-14 01:25:59] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"c9ab52a"}
[2017-01-14 01:27:05] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"2b71859"}
[2017-01-14 01:27:05] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"d795fe1"}
[2017-01-14 01:27:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"0f1cc48"}
[2017-01-14 01:27:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"e693139"}
[2017-01-14 01:27:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"29c9c99"}
[2017-01-14 01:27:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"da77354"}
[2017-01-14 01:28:16] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"9428a88"}
[2017-01-14 01:28:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"4773c0f"}
[2017-01-14 01:28:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"7309c59"}
[2017-01-14 01:28:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"e897126"}
[2017-01-14 01:29:12] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"f60e6b7"}
[2017-01-14 01:29:12] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"84ac636"}
[2017-01-14 01:29:30] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0813/37%' OR NIK_NASIONAL LIKE '%43/4321/0813/37%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"a5d03a3"}
[2017-01-14 01:29:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"f013dec"}
[2017-01-14 01:29:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"50f043b"}
[2017-01-14 01:29:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"65b62de"}
[2017-01-14 01:29:52] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"15dd6da"}
[2017-01-14 01:29:52] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"26fd029"}
[2017-01-14 01:30:05] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"7c665dc"}
[2017-01-14 01:30:05] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"7b7e1b8"}
[2017-01-14 01:30:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"f63917d"}
[2017-01-14 01:30:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"957c2f4"}
[2017-01-14 01:30:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"fcd7fe4"}
[2017-01-14 01:30:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%OPERATOR GRADER%'  [] {"uid":"1e7d053"}
[2017-01-14 01:31:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"a1a8efa"}
[2017-01-14 01:32:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"5f8c740"}
[2017-01-14 01:32:11] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"20fe00b"}
[2017-01-14 01:32:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"71d752d"}
[2017-01-14 01:32:18] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' AND (NIK_SAP LIKE '%453%' OR NIK_NASIONAL LIKE '%453%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"aaf9a0a"}
[2017-01-14 01:32:20] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1115/4533%' OR NIK_NASIONAL LIKE '%43/4321/1115/4533%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"f6d3568"}
[2017-01-14 01:32:20] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/1115/4533' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/1115/4533' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"942a3d2"}
[2017-01-14 01:32:21] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"028b41a"}
[2017-01-14 01:32:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"c12cba9"}
[2017-01-14 01:32:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"b81c814"}
[2017-01-14 01:33:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"d36cbd3"}
[2017-01-14 01:33:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"4c7e520"}
[2017-01-14 01:33:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"7a327fe"}
[2017-01-14 01:33:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"d813c76"}
[2017-01-14 01:34:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"cd46a87"}
[2017-01-14 01:34:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"9b3bfb3"}
[2017-01-14 01:34:29] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"db1070b"}
[2017-01-14 01:34:29] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"3944503"}
[2017-01-14 01:34:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"a00beb3"}
[2017-01-14 01:34:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"c7355ea"}
[2017-01-14 01:35:06] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1115/4533%' OR NIK_NASIONAL LIKE '%43/4321/1115/4533%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"fa15783"}
[2017-01-14 01:35:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"87570fc"}
[2017-01-14 01:35:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"93486b6"}
[2017-01-14 01:35:08] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"dbea699"}
[2017-01-14 01:35:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"78e9faa"}
[2017-01-14 01:35:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"77f3ae5"}
[2017-01-14 01:36:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"416486c"}
[2017-01-14 01:36:24] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"1961d29"}
[2017-01-14 01:36:48] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"f88f040"}
[2017-01-14 01:36:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"eb4e68c"}
[2017-01-14 01:37:02] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"901e2a1"}
[2017-01-14 01:37:02] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"dfc7232"}
[2017-01-14 01:37:28] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"181b7c1"}
[2017-01-14 01:37:28] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"cdd3067"}
[2017-01-14 01:37:30] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"9bea0a3"}
[2017-01-14 01:37:30] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"7e5502e"}
[2017-01-14 01:37:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"c3c2a88"}
[2017-01-14 01:37:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"96b5b11"}
[2017-01-14 01:40:05] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"30ab0d9"}
[2017-01-14 01:40:15] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"91eb83d"}
[2017-01-14 01:40:15] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"0663e65"}
[2017-01-14 01:40:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"3d4a5ef"}
[2017-01-14 01:40:18] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' AND (NIK_SAP LIKE '%1%' OR NIK_NASIONAL LIKE '%1%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"0f2446c"}
[2017-01-14 01:40:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"51fcf43"}
[2017-01-14 01:40:19] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' AND (NIK_SAP LIKE '%13%' OR NIK_NASIONAL LIKE '%13%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"79534f0"}
[2017-01-14 01:40:21] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"92a1426"}
[2017-01-14 01:40:22] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' AND (NIK_SAP LIKE '%132%' OR NIK_NASIONAL LIKE '%132%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"a58744d"}
[2017-01-14 01:40:25] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0913/2132%' OR NIK_NASIONAL LIKE '%43/4321/0913/2132%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"7f48f67"}
[2017-01-14 01:40:25] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/0913/2132' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/0913/2132' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"5269b7c"}
[2017-01-14 01:40:26] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%BABY SITTER%'  [] {"uid":"3b486c4"}
[2017-01-14 01:40:48] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"7e3feaf"}
[2017-01-14 01:40:54] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"442d7af"}
[2017-01-14 01:40:55] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"1ad8bcc"}
[2017-01-14 01:40:57] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"f6a33ef"}
[2017-01-14 01:40:58] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' AND (NIK_SAP LIKE '%87%' OR NIK_NASIONAL LIKE '%87%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"402e55e"}
[2017-01-14 01:40:59] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0514/2687%' OR NIK_NASIONAL LIKE '%43/4321/0514/2687%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"21a98e2"}
[2017-01-14 01:40:59] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/0514/2687' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/0514/2687' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"dce2765"}
[2017-01-14 01:41:00] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"c5f50ca"}
[2017-01-14 01:44:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"a9bd494"}
[2017-01-14 01:44:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"42a831c"}
[2017-01-14 01:44:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"efc18c4"}
[2017-01-14 01:44:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"6a70841"}
[2017-01-14 01:45:31] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"d209d53"}
[2017-01-14 01:45:31] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"faf1b69"}
[2017-01-14 01:45:56] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"7a84bf6"}
[2017-01-14 01:45:56] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"e4a3bbf"}
[2017-01-14 01:46:16] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"2d27650"}
[2017-01-14 01:46:16] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"de2ff9c"}
[2017-01-14 01:47:43] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0514/2687%' OR NIK_NASIONAL LIKE '%43/4321/0514/2687%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"64e5f7a"}
[2017-01-14 01:47:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"c5cc0f8"}
[2017-01-14 01:47:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"95104c1"}
[2017-01-14 01:47:46] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"5829914"}
[2017-01-14 01:48:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"8811532"}
[2017-01-14 01:48:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"951bed5"}
[2017-01-14 01:48:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"920b7bf"}
[2017-01-14 01:48:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"15a4eb2"}
[2017-01-14 01:48:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"2a50ce2"}
[2017-01-14 01:48:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"81a0859"}
[2017-01-14 01:48:57] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/0514/2687%' OR NIK_NASIONAL LIKE '%43/4321/0514/2687%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"ccc50f8"}
[2017-01-14 01:48:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"496283b"}
[2017-01-14 01:48:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"842cc2c"}
[2017-01-14 01:49:00] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"356e0bb"}
[2017-01-14 01:49:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"f1b2fe9"}
[2017-01-14 01:49:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"09fc5db"}
[2017-01-14 01:49:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"128c597"}
[2017-01-14 01:49:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"6cd7511"}
[2017-01-14 01:49:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"e4a60f2"}
[2017-01-14 01:49:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"a9cfad9"}
[2017-01-14 11:12:13] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"fd989bb"}
[2017-01-14 11:14:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"f0a0cb3"}
[2017-01-14 11:14:10] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"e31b1ed"}
[2017-01-14 11:19:55] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1014/3143%' OR NIK_NASIONAL LIKE '%43/4321/1014/3143%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"9f9e19f"}
[2017-01-14 11:19:55] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/1014/3143' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/1014/3143' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"553704f"}
[2017-01-14 11:19:56] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"3b526ee"}
[2017-01-14 11:23:35] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1014/3143%' OR NIK_NASIONAL LIKE '%43/4321/1014/3143%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"935b676"}
[2017-01-14 11:23:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"301c8b5"}
[2017-01-14 11:23:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"66508a8"}
[2017-01-14 11:23:41] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"65e8a06"}
[2017-01-14 11:28:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"c5dbb58"}
[2017-01-14 11:28:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"8363193"}
[2017-01-14 11:28:38] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"f9a3b88"}
[2017-01-14 11:28:38] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"5243ba0"}
[2017-01-14 11:28:42] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"8c0a29f"}
[2017-01-14 11:28:43] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"220cacb"}
[2017-01-14 11:30:26] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"e475a80"}
[2017-01-14 11:30:26] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"defdf30"}
[2017-01-14 11:30:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"ab318e1"}
[2017-01-14 11:30:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"8635a64"}
[2017-01-14 11:31:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"23fc633"}
[2017-01-14 11:31:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"6078411"}
[2017-01-14 11:31:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"efa0184"}
[2017-01-14 11:31:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"e987046"}
[2017-01-14 11:32:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"91bde1c"}
[2017-01-14 11:32:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"8f68e4f"}
[2017-01-14 11:32:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"beedf82"}
[2017-01-14 11:32:50] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"2f44756"}
[2017-01-14 11:32:50] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"dee1f78"}
[2017-01-14 11:32:52] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1214/3315%' OR NIK_NASIONAL LIKE '%43/4321/1214/3315%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"c9473fb"}
[2017-01-14 11:32:52] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/1214/3315' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/1214/3315' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"5efd085"}
[2017-01-14 11:32:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"d41b9d1"}
[2017-01-14 11:33:11] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"e219873"}
[2017-01-14 11:33:11] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"34c0a19"}
[2017-01-14 11:33:46] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"47fad4b"}
[2017-01-14 11:33:46] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"df6cfce"}
[2017-01-14 11:34:43] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1014/3143%' OR NIK_NASIONAL LIKE '%43/4321/1014/3143%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"1eda81b"}
[2017-01-14 11:34:43] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"d5a6005"}
[2017-01-14 11:34:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"329b041"}
[2017-01-14 11:34:45] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"609f9bf"}
[2017-01-14 11:36:56] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"be62e67"}
[2017-01-14 11:36:56] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"e7ce566"}
[2017-01-14 11:37:00] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1214/3315%' OR NIK_NASIONAL LIKE '%43/4321/1214/3315%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"251c187"}
[2017-01-14 11:37:01] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"676b283"}
[2017-01-14 11:37:01] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"c46507d"}
[2017-01-14 11:37:03] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"c529ad0"}
[2017-01-14 11:37:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"7786670"}
[2017-01-14 11:37:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"ff0ed91"}
[2017-01-14 11:37:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"efed041"}
[2017-01-14 11:37:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"a265d53"}
[2017-01-14 11:37:20] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0560022"}
[2017-01-14 11:37:20] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1a2fe6e"}
[2017-01-14 11:37:31] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"641bb6a"}
[2017-01-14 11:37:31] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"5aac109"}
[2017-01-14 11:39:16] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"7a73b97"}
[2017-01-14 11:39:16] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"522232e"}
[2017-01-14 11:42:35] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1214/3315%' OR NIK_NASIONAL LIKE '%43/4321/1214/3315%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"6123feb"}
[2017-01-14 11:42:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"4139569"}
[2017-01-14 11:42:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"08922e9"}
[2017-01-14 11:42:38] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"e05a742"}
[2017-01-14 11:42:51] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"b0a69ee"}
[2017-01-14 11:42:51] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"711d79d"}
[2017-01-14 11:42:52] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"91db41c"}
[2017-01-14 11:42:52] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"8739e6b"}
[2017-01-14 11:43:02] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"18e108a"}
[2017-01-14 11:43:03] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"867b158"}
[2017-01-14 11:43:31] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1214/3315%' OR NIK_NASIONAL LIKE '%43/4321/1214/3315%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"fb27b78"}
[2017-01-14 11:43:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"764fc2e"}
[2017-01-14 11:43:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"04469d3"}
[2017-01-14 11:43:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"45abc9d"}
[2017-01-14 11:43:57] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"6ec7346"}
[2017-01-14 11:43:57] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"171cfbc"}
[2017-01-14 11:43:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"a50bc5d"}
[2017-01-14 11:43:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"e95711f"}
[2017-01-14 11:44:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"03542ab"}
[2017-01-14 11:44:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"cf224bb"}
[2017-01-14 11:46:40] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1214/3315%' OR NIK_NASIONAL LIKE '%43/4321/1214/3315%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"18c7e18"}
[2017-01-14 11:46:41] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"bb797b3"}
[2017-01-14 11:46:41] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"3b3e54a"}
[2017-01-14 11:46:42] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"43080e2"}
[2017-01-14 11:46:52] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"e28436f"}
[2017-01-14 11:46:52] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ec8bd80"}
[2017-01-14 11:46:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"f48891f"}
[2017-01-14 11:46:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"8ce2ae1"}
[2017-01-14 11:47:04] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"8de9f2a"}
[2017-01-14 11:47:04] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"218a7b4"}
[2017-01-14 11:47:24] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1214/3315%' OR NIK_NASIONAL LIKE '%43/4321/1214/3315%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"8f589f3"}
[2017-01-14 11:47:25] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"05926da"}
[2017-01-14 11:47:25] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1c4eacf"}
[2017-01-14 11:47:26] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"531fb80"}
[2017-01-14 11:47:39] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1f6bd1f"}
[2017-01-14 11:47:39] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"360b8a6"}
[2017-01-14 11:47:40] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"c7acd02"}
[2017-01-14 11:47:40] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"b2b7f4b"}
[2017-01-14 11:47:45] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"dcb0c01"}
[2017-01-14 11:47:45] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"a04cf73"}
[2017-01-14 11:49:34] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1214/3315%' OR NIK_NASIONAL LIKE '%43/4321/1214/3315%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"55f3d35"}
[2017-01-14 11:49:35] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"2ff8193"}
[2017-01-14 11:49:35] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0f50988"}
[2017-01-14 11:49:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"c8fdc98"}
[2017-01-14 11:50:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"d25847e"}
[2017-01-14 11:50:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"5bf0840"}
[2017-01-14 11:50:24] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"2e969c5"}
[2017-01-14 11:50:24] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1021225"}
[2017-01-14 11:50:25] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0c77ce7"}
[2017-01-14 11:50:26] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"000a673"}
[2017-01-14 11:53:16] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1214/3315%' OR NIK_NASIONAL LIKE '%43/4321/1214/3315%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"01bb1f3"}
[2017-01-14 11:53:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"af6a520"}
[2017-01-14 11:53:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"306f136"}
[2017-01-14 11:53:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"a128519"}
[2017-01-14 11:55:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"66e1fcc"}
[2017-01-14 11:55:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ddb71c7"}
[2017-01-14 11:55:54] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1916b74"}
[2017-01-14 11:55:54] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ec77414"}
[2017-01-14 12:00:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"68cf5c9"}
[2017-01-14 12:00:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"b6cc15b"}
[2017-01-14 12:01:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"18f6e9f"}
[2017-01-14 12:01:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"31adbef"}
[2017-01-14 12:07:41] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"9befab7"}
[2017-01-14 12:07:41] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"8673ddf"}
[2017-01-14 12:08:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"2ca0621"}
[2017-01-14 12:08:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"15380f9"}
[2017-01-14 12:09:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"0e9cfe1"}
[2017-01-14 12:09:11] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"32869e6"}
[2017-01-14 12:09:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"aa9be59"}
[2017-01-14 12:09:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"9549dc6"}
[2017-01-14 12:09:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"3f48c53"}
[2017-01-14 12:09:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"6e116c6"}
[2017-01-14 12:11:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"682e3b2"}
[2017-01-14 12:11:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"85c1fd2"}
[2017-01-14 12:11:43] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"4e5cece"}
[2017-01-14 12:11:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"adfd88d"}
[2017-01-14 12:31:54] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"33592b3"}
[2017-01-14 12:32:54] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"45f80c3"}
[2017-01-14 12:34:18] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"2125b8b"}
[2017-01-14 12:35:08] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"4754ede"}
[2017-01-14 12:35:39] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"49df27e"}
[2017-01-14 12:36:41] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"feb8fbf"}
[2017-01-14 12:36:54] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"134b4f2"}
[2017-01-14 12:36:54] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"8f3d63a"}
[2017-01-14 12:37:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"bcffb49"}
[2017-01-14 12:37:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"77f7b8a"}
[2017-01-14 12:39:00] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"453a130"}
[2017-01-14 12:39:50] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"f4dc784"}
[2017-01-14 12:40:33] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"dcabde6"}
[2017-01-14 12:40:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"343c177"}
[2017-01-14 12:40:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"88cb851"}
[2017-01-14 12:41:42] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"f63489d"}
[2017-01-14 12:44:24] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"9738fcb"}
[2017-01-14 12:44:39] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"b9576e7"}
[2017-01-14 12:45:18] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"d6f7f04"}
[2017-01-14 12:46:10] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"dc29eeb"}
[2017-01-14 12:49:32] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"1852864"}
[2017-01-14 12:49:56] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"90e5359"}
[2017-01-14 12:50:41] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"075b3b1"}
[2017-01-14 12:51:34] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"565fd34"}
[2017-01-14 12:52:47] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"8d1850d"}
[2017-01-14 12:53:12] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"6be58a9"}
[2017-01-14 12:53:31] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"4d52c72"}
[2017-01-14 12:53:31] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"5962c4a"}
[2017-01-14 12:53:33] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"1366a8d"}
[2017-01-14 12:53:33] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/1013/2196' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/1013/2196' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"20cffdb"}
[2017-01-14 12:53:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"02ccad6"}
[2017-01-14 12:54:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0e7d12a"}
[2017-01-14 12:54:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"fe5475f"}
[2017-01-14 12:54:49] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"6a08f87"}
[2017-01-14 12:54:50] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"a2e7902"}
[2017-01-14 12:54:50] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"46739ff"}
[2017-01-14 12:54:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"0dcf834"}
[2017-01-14 12:55:23] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"5c9d990"}
[2017-01-14 12:55:59] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"e2f0a21"}
[2017-01-14 12:56:25] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"e980b4f"}
[2017-01-14 12:56:26] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"a79adc8"}
[2017-01-14 12:56:51] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"efcfdff"}
[2017-01-14 12:56:51] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"015847f"}
[2017-01-14 12:57:24] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"8c7dcd9"}
[2017-01-14 12:57:27] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"b697b12"}
[2017-01-14 12:57:27] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"48d3976"}
[2017-01-14 12:57:30] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"1348af4"}
[2017-01-14 12:57:43] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"4f94031"}
[2017-01-14 12:57:43] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"e608d0e"}
[2017-01-14 12:57:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"23d34c3"}
[2017-01-14 12:57:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"af69fd0"}
[2017-01-14 12:58:27] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"7a208fa"}
[2017-01-14 12:59:04] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"7c3b974"}
[2017-01-14 12:59:04] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"5834a69"}
[2017-01-14 12:59:05] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ac34a1d"}
[2017-01-14 12:59:05] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1c308a6"}
[2017-01-14 12:59:37] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"b9557f3"}
[2017-01-14 13:00:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"2226a73"}
[2017-01-14 13:00:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"5736d0b"}
[2017-01-14 13:00:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"2da98fc"}
[2017-01-14 13:00:11] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"125e8b2"}
[2017-01-14 13:00:21] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"01df297"}
[2017-01-14 13:00:29] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"52e6144"}
[2017-01-14 13:00:29] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"e5e1e26"}
[2017-01-14 13:00:30] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"fd5ab5e"}
[2017-01-14 13:00:30] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"f35a15a"}
[2017-01-14 13:00:31] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0954db7"}
[2017-01-14 13:00:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"545e477"}
[2017-01-14 13:00:47] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"49f6017"}
[2017-01-14 13:00:47] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"662f7d2"}
[2017-01-14 13:00:52] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"dc5619e"}
[2017-01-14 13:01:16] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"6469170"}
[2017-01-14 13:01:49] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"95fa3ff"}
[2017-01-14 13:02:11] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"807c954"}
[2017-01-14 13:02:36] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"188c36f"}
[2017-01-14 13:02:54] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"4003931"}
[2017-01-14 13:03:30] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"839ed68"}
[2017-01-14 13:05:07] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"e158ee0"}
[2017-01-14 13:05:51] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"d17ecc9"}
[2017-01-14 13:06:52] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"1083216"}
[2017-01-14 13:09:11] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"29da227"}
[2017-01-14 13:09:50] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"ecd60eb"}
[2017-01-14 13:10:53] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"d097885"}
[2017-01-14 13:11:27] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"7874944"}
[2017-01-14 13:12:40] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"46d5774"}
[2017-01-14 13:12:41] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"7d9e0c2"}
[2017-01-14 13:12:41] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ec0595f"}
[2017-01-14 13:12:48] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"be23355"}
[2017-01-14 13:12:59] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"3f6aed1"}
[2017-01-14 13:13:15] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"24bee73"}
[2017-01-14 13:13:15] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"f569c35"}
[2017-01-14 13:13:16] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"8679c22"}
[2017-01-14 13:13:16] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"e86b63a"}
[2017-01-14 13:14:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"c58fa58"}
[2017-01-14 13:14:07] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ec77a90"}
[2017-01-14 13:14:08] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"3aee118"}
[2017-01-14 13:14:08] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"f5a231b"}
[2017-01-14 13:14:09] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"5ef0c50"}
[2017-01-14 13:14:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"3aabb87"}
[2017-01-14 13:14:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"68df83f"}
[2017-01-14 13:14:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1e6495d"}
[2017-01-14 13:14:29] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"c9a1f6c"}
[2017-01-14 13:15:09] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"79a7261"}
[2017-01-14 13:15:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"a8f394b"}
[2017-01-14 13:15:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0abc8a7"}
[2017-01-14 13:15:11] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"474ba3f"}
[2017-01-14 13:15:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"8fc5126"}
[2017-01-14 13:15:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"4d29617"}
[2017-01-14 13:15:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"bef30e1"}
[2017-01-14 13:15:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"b8e1c39"}
[2017-01-14 13:15:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"c13e196"}
[2017-01-14 13:15:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"065f7e9"}
[2017-01-14 13:15:45] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"b938dbe"}
[2017-01-14 13:15:46] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"5e24bc6"}
[2017-01-14 13:15:46] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"5404afc"}
[2017-01-14 13:16:32] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"694e8f8"}
[2017-01-14 13:16:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"b2360a7"}
[2017-01-14 13:16:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"16eb739"}
[2017-01-14 13:16:35] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"c9e8956"}
[2017-01-14 13:16:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"a562ee4"}
[2017-01-14 13:16:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"a849d01"}
[2017-01-14 13:16:50] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"edbef5f"}
[2017-01-14 13:16:50] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"6af5f8e"}
[2017-01-14 13:16:51] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0934b3a"}
[2017-01-14 13:16:51] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"42929c0"}
[2017-01-14 13:17:02] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"6e8f336"}
[2017-01-14 13:17:02] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"38f9ba7"}
[2017-01-14 13:17:30] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"821e8d5"}
[2017-01-14 13:17:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"5bacc3a"}
[2017-01-14 13:17:32] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"e278d0f"}
[2017-01-14 13:17:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"f841dcd"}
[2017-01-14 13:17:46] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"b275bdd"}
[2017-01-14 13:17:46] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0664161"}
[2017-01-14 13:17:47] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"86650e7"}
[2017-01-14 13:17:47] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"74b6308"}
[2017-01-14 13:17:48] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"b3ebc3d"}
[2017-01-14 13:17:48] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"fc0a905"}
[2017-01-14 13:17:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"c3591b8"}
[2017-01-14 13:17:53] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"403d7a3"}
[2017-01-14 13:18:21] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"3e1a0b9"}
[2017-01-14 13:19:30] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"e483dd5"}
[2017-01-14 13:25:26] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"8322809"}
[2017-01-14 13:25:58] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"efd18fa"}
[2017-01-14 13:27:28] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"a892208"}
[2017-01-14 13:27:28] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"0018b3f"}
[2017-01-14 13:28:12] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"abbe7df"}
[2017-01-14 13:28:13] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ed71f17"}
[2017-01-14 13:28:13] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"426130b"}
[2017-01-14 13:28:16] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"f4348fc"}
[2017-01-14 13:28:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1358b5a"}
[2017-01-14 13:28:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"b134fae"}
[2017-01-14 13:28:19] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"7a7e399"}
[2017-01-14 13:29:25] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"e8e26c2"}
[2017-01-14 13:29:25] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"c9ab347"}
[2017-01-14 13:29:26] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"60ab616"}
[2017-01-14 13:29:26] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"d0ce919"}
[2017-01-14 13:29:30] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0cd67d2"}
[2017-01-14 13:29:30] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"911f7ea"}
[2017-01-14 13:29:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"501de20"}
[2017-01-14 13:29:33] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"cb7d368"}
[2017-01-14 13:29:50] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"75a5c00"}
[2017-01-14 13:29:59] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"a0ca3b9"}
[2017-01-14 13:31:25] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"1af0424"}
[2017-01-14 13:33:45] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"1e6e728"}
[2017-01-14 13:35:00] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"b382347"}
[2017-01-14 13:35:00] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"2506917"}
[2017-01-14 13:35:40] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"6f9c7cb"}
[2017-01-14 13:35:50] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"598e9b9"}
[2017-01-14 13:38:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"1fe6a50"}
[2017-01-14 13:39:27] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"5863e11"}
[2017-01-14 13:40:17] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"857c122"}
[2017-01-14 13:42:46] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"f7ff589"}
[2017-01-14 13:42:47] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"285e997"}
[2017-01-14 13:42:48] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"498012e"}
[2017-01-14 13:42:48] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/1013/2196' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/1013/2196' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"d0010df"}
[2017-01-14 13:42:49] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"30900f1"}
[2017-01-14 13:45:31] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"0024947"}
[2017-01-14 13:45:51] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"1107c10"}
[2017-01-14 13:47:02] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"d227db3"}
[2017-01-14 13:50:04] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"be20e1a"}
[2017-01-14 13:56:23] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"2bf421b"}
[2017-01-14 13:56:28] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"480c60b"}
[2017-01-14 14:01:56] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"798cd69"}
[2017-01-14 14:04:14] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"f2243b1"}
[2017-01-14 14:06:47] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"81ce5d7"}
[2017-01-14 14:07:53] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"7df32ed"}
[2017-01-14 14:08:48] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"7b10a6d"}
[2017-01-14 14:09:07] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"c254675"}
[2017-01-14 14:09:40] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"12c483a"}
[2017-01-14 14:11:39] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"8e194cc"}
[2017-01-14 14:12:53] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"e3a1861"}
[2017-01-14 14:15:09] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"14c3cf6"}
[2017-01-14 14:16:03] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"e587040"}
[2017-01-14 14:18:17] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"6461017"}
[2017-01-14 14:18:37] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"4ecfad6"}
[2017-01-14 14:18:50] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"f1ec890"}
[2017-01-14 14:19:39] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"fd1577c"}
[2017-01-14 14:20:03] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"1b06ae2"}
[2017-01-14 14:20:36] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"8f73d9d"}
[2017-01-14 14:22:06] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"6558ed2"}
[2017-01-14 14:28:37] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"9bf072d"}
[2017-01-14 14:28:48] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"e8288c1"}
[2017-01-14 14:28:56] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"30154f8"}
[2017-01-14 14:29:01] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"faeea85"}
[2017-01-14 14:32:39] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"0df9b51"}
[2017-01-14 14:34:44] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"babfcf3"}
[2017-01-14 14:35:54] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"1b64076"}
[2017-01-14 14:36:15] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"689aed8"}
[2017-01-14 14:36:52] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"712a543"}
[2017-01-14 14:36:53] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"732de18"}
[2017-01-14 14:37:40] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"7d8bda1"}
[2017-01-14 14:37:53] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"7a85caf"}
[2017-01-14 14:38:29] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"340108b"}
[2017-01-14 14:38:29] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"5c52fd0"}
[2017-01-14 14:38:49] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%31/3121/0115/511%' OR NIK_NASIONAL LIKE '%31/3121/0115/511%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"3d31cdd"}
[2017-01-14 14:38:51] TAP-FLOW.ERROR: Controller ini is not defined {"path":"favicon.ico"} {"uid":"e43f9fa"}
[2017-01-14 14:41:15] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"1362e26"}
[2017-01-14 14:41:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"500f096"}
[2017-01-14 14:41:18] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) IN ('3121','3221','3321') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"b629605"}
[2017-01-14 14:41:18] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"36d45aa"}
[2017-01-14 14:41:19] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND SUBSTR(NIK_SAP,4,4) IN ('3121','3221','3321') AND (NIK_SAP LIKE '%31/3121/0115/511%' OR NIK_NASIONAL LIKE '%31/3121/0115/511%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"82cc745"}
[2017-01-14 14:41:22] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"4c65136"}
[2017-01-14 14:41:27] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"0ab8cc8"}
[2017-01-14 14:41:30] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"02dd970"}
[2017-01-14 14:41:30] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) IN ('3121','3221','3321') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"6c20fc2"}
[2017-01-14 14:41:31] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"95db770"}
[2017-01-14 14:41:31] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) IN ('3121','3221','3321') AND (NIK_SAP LIKE '%31/3121/0115/511%' OR NIK_NASIONAL LIKE '%31/3121/0115/511%') OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"ecd0377"}
[2017-01-14 14:45:37] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"6d8d2c4"}
[2017-01-14 14:45:37] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"b870f20"}
[2017-01-14 14:46:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"9dd1341"}
[2017-01-14 14:46:10] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"938395d"}
[2017-01-14 14:46:30] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"e4a4360"}
[2017-01-14 14:46:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"e41ba92"}
[2017-01-14 14:46:36] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"5fe573c"}
[2017-01-14 14:47:15] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"e6376ae"}
[2017-01-14 14:47:15] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"7640218"}
[2017-01-14 14:48:08] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"82305ff"}
[2017-01-14 14:48:14] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"4c26882"}
[2017-01-14 14:48:14] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%SATPAM%'  [] {"uid":"e4f5bf6"}
[2017-01-14 14:48:22] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"8a0caac"}
[2017-01-14 14:48:40] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"518f4e4"}
[2017-01-14 14:48:41] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"4de999b"}
[2017-01-14 14:48:43] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"ddb3611"}
[2017-01-14 14:48:43] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/1013/2196' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/1013/2196' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"d261765"}
[2017-01-14 14:48:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"455966b"}
[2017-01-14 14:48:59] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"11f4d05"}
[2017-01-14 14:48:59] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"758626b"}
[2017-01-14 14:49:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"13966b3"}
[2017-01-14 14:49:22] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEKERJA RAWAT%'  [] {"uid":"3ae28fc"}
[2017-01-14 14:49:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"1180a37"}
[2017-01-14 14:49:55] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"04c0260"}
[2017-01-14 14:50:14] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"998c9d5"}
[2017-01-14 14:50:14] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"1370b1e"}
[2017-01-14 14:50:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ece0576"}
[2017-01-14 14:50:23] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"ac12955"}
[2017-01-14 14:50:59] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"31fc35c"}
[2017-01-14 14:50:59] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"0b5ec05"}
[2017-01-14 14:51:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"a55c0c8"}
[2017-01-14 14:51:34] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"83ee759"}
[2017-01-14 14:51:39] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"44844b5"}
[2017-01-14 14:51:49] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"b104ddf"}
[2017-01-14 14:52:51] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"bfb6631"}
[2017-01-14 14:53:06] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"35f5781"}
[2017-01-14 14:53:06] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3 AND BANK_ID like '%002%'  [] {"uid":"3e48f07"}
[2017-01-14 14:53:38] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB  [] {"uid":"f974dfb"}
[2017-01-14 14:53:38] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND UPPER(JOB_CODE) LIKE '%PEMANEN%' AND SUBSTR(NIK_SAP,4,4) LIKE '%4321%' OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"cff2c99"}
[2017-01-14 14:53:43] TAP-FLOW.DEBUG: employee/search: WITH EMPLOYEE_INSTANCE AS ( SELECT * FROM TM_EMPLOYEE_PERSONALIA WHERE TRUNC(TO_DATE('2017-01-14', 'YYYY-MM-DD'), 'MM') BETWEEN START_VALID AND CASE WHEN EXTRACT (YEAR FROM RES_DATE) != 9999 THEN RES_DATE ELSE END_VALID END AND (NIK_SAP LIKE '%43/4321/1013/2196%' OR NIK_NASIONAL LIKE '%43/4321/1013/2196%') ) SELECT INS.NIK_SAP AS NIK,INS.ADDRESS AS ADDRESS,INS.AFD_CODE AS AFD_CODE,INS.ASTEK_TYPE AS ASTEK_TYPE,INS.BANK_ACCOUNT_NUMBER AS BANK_ACCOUNT_NUMBER,INS.BANK_COUNTRY_KEY AS BANK_COUNTRY_KEY,INS.BANK_KEYS AS BANK_KEYS,INS.BOND_EXPIRE_DATE AS BOND_EXPIRE_DATE,INS.BPJS_KESEHATAN AS BPJS_KESEHATAN,INS.BPJS_KETENAGAKERJAAN AS BPJS_KETENAGAKERJAAN,INS.COMP_CODE AS COMP_CODE,INS.CONDUCTOR_NAME AS CONDUCTOR_NAME,INS.CONTRACT_TO AS CONTRACT_TO,INS.CURRENCY AS CURRENCY,INS.CUSTOMER AS CUSTOMER,INS.DEPARTEMEN AS DEPARTEMEN,INS.DESCRIPTION AS DESCRIPTION,INS.DOB AS DOB,INS.DOMISILI_ID AS DOMISILI_ID,INS.EMAIL AS EMAIL,INS.EMP_STAT AS EMP_STAT,INS.EMP_STAT1 AS EMP_STAT1,INS.EMPLOYEE_NAME AS EMPLOYEE_NAME,INS.EMPLOYEE_STATUS_INDICATOR AS EMPLOYEE_STATUS_INDICATOR,INS.END_VALID AS END_VALID,INS.ENTRY_DATE AS JOIN_DATE,INS.EPF_NUMBER AS EPF_NUMBER,INS.EPF_PERCENTAGE AS EPF_PERCENTAGE,INS.EPF_TYPE AS EPF_TYPE,INS.EST_CODE AS EST_CODE,INS.EXPIRE_DATE_CONTRACT AS EXPIRE_DATE_CONTRACT,INS.FINGER_CODE AS FINGER_CODE,INS.GANGCODE AS GANGCODE,INS.GOLONGAN AS GOLONGAN,INS.HOME_PHONE AS HOME_PHONE,INS.IC_NUMBER_NEW AS IC_NUMBER_NEW,INS.IC_NUMBER_OLD AS IC_NUMBER_OLD,INS.IC_SARAWAK_REGION AS IC_SARAWAK_REGION,INS.IDENTIFICATION AS IDENTIFICATION,INS.INDCTR AS INDCTR,INS.INSENTIF AS INSENTIF,INS.JOB_CODE AS JOB_CODE,INS.JOB_TYPE AS JOB_TYPE,INS.LEVEL_EMPLOYEE AS LEVEL_EMPLOYEE,INS.LICENSE_ID AS LICENSE_ID,INS.MOBILE_PHONE AS MOBILE_PHONE,INS.NIK_NASIONAL AS NIK_NASIONAL,INS.NIK_OLD AS NIK_OLD,INS.NO_KK AS NO_KK,INS.NO_KTP AS NO_KTP,INS.NPWP AS NPWP,INS.ORGANIZATION_CODE AS ORGANIZATION_CODE,INS.PASSPORT_EXPIRE_DATE AS PASSPORT_EXPIRE_DATE,INS.PASSPORT_NUMBER AS PASSPORT_NUMBER,INS.PAYMENT_TYPE AS PAYMENT_TYPE,INS.PERIOD_PROBATION AS PERIOD_PROBATION,INS.PHASE AS PHASE,INS.PHONE AS PHONE,INS.POB AS POB,INS.POSITION AS POSITION,INS.PROF_NAME AS PROF_NAME,INS.RACE AS RACE,INS.RELIGION AS RELIGION,INS.RES_DATE AS RES_DATE,INS.RESIDENT_FLAG AS RESIDENT_FLAG,INS.RICE_PORTION_OPTIONS AS RICE_PORTION_OPTIONS,INS.SALARY AS SALARY,INS.SALARY_TYPE AS SALARY_TYPE,INS.SEX AS SEX,INS.SOCSO_NUMBER AS SOCSO_NUMBER,INS.SPK_SK AS SPK_SK,INS.START_VALID AS START_VALID,INS.STATUS AS STATUS,INS.TIME_ID AS TIME_ID,INS.WORK_PERMIT_EXPIRE_DATE AS WORK_PERMIT_EXPIRE_DATE,AFD.AFD_NAME AS AFD_NAME,AREA.AREA_CODE AS WERKS,COMP.COMP_NAME AS COMP_NAME,AREA.PAYROLL AS EST_NAME,DECODE(SUBSTR(AREA.AREA_CODE, 3, 1), '4', 'MILL', 'ESTATE') ESTATE_MILL,NULL SPV_NIK,'SAP' SOURCE FROM EMPLOYEE_INSTANCE INS JOIN TM_COMP@DEVDW_LINK COMP ON INS.COMP_CODE = COMP.COMP_CODE JOIN TM_AREA_CODE@DEVDW_LINK AREA ON AREA.AREA_CODE = SUBSTR(INS.NIK_SAP,4,4) LEFT JOIN TM_AFD@DEVDW_LINK AFD ON INS.COMP_CODE = AFD.COMP_CODE AND INS.EST_CODE = AFD.EST_CODE AND INS.AFD_CODE = AFD.AFD_CODE  [] {"uid":"34b7ea3"}
[2017-01-14 14:53:43] TAP-FLOW.DEBUG: employee/getProductivity: WITH PROD AS ( SELECT SUBSTR(AB.BUDAT,0,6) BULAN, EM.EMPNR, COUNT(AB.BUNCH_TOTAL) PRODUCTIVITY FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AA WHERE AA.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BB WHERE BB.EMPNR = AA.EMPNR ) AND AA.RSDATE = '00000000' )EM JOIN STAGING.ZPAY_BCC_SAP@PRODDB_LINK AB ON AB.EMPNR = EM.EMPNR AND SUBSTR(AB.BUDAT,0,6) IN ('201610','201611','201612') WHERE EM.EMPNR = '43/4321/1013/2196' GROUP BY EM.EMPNR, SUBSTR(AB.BUDAT,0,6) ), ATTEN AS ( SELECT SUBSTR(AD.BUDAT,0,6) BULAN, FR.EMPNR, COUNT(SUBSTR(AD.BUDAT,0,6)) KEHADIRAN FROM ( SELECT * FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK AE WHERE AE.KDATB = ( SELECT MAX(KDATB) FROM STAGING.ZPAY_EMPLOYEE_SAP@PRODDB_LINK BA WHERE BA.EMPNR = AE.EMPNR ) AND AE.RSDATE = '00000000' )FR JOIN STAGING.ZPAY_TIME_SAP@PRODDB_LINK AD ON AD.EMPNR = FR.EMPNR AND SUBSTR(AD.BUDAT,0,6) IN ('201610','201611','201612') WHERE FR.EMPNR = '43/4321/1013/2196' GROUP BY FR.EMPNR, SUBSTR(AD.BUDAT,0,6) ), SPMON AS (  SELECT * FROM ( ( SELECT '201612' M3,'201611' M2,'201610' M1 FROM DUAL )  unpivot ( BULAN FOR STRING IN (M3,M2,M1) ) ) ) SELECT SPMON.BULAN, NVL(ATTEN.KEHADIRAN,0) KEHADIRAN, NVL(PROD.PRODUCTIVITY,0) PRODUCTIVITY FROM SPMON LEFT JOIN ATTEN ON ATTEN.BULAN = SPMON.BULAN LEFT JOIN PROD ON ATTEN.BULAN = PROD.BULAN AND PROD.EMPNR = ATTEN.EMPNR [] {"uid":"c4c6b70"}
[2017-01-14 14:53:44] TAP-FLOW.DEBUG: SELECT JOB_CODE, JOB_DESCRIPTION, JOB_TYPE, SOURCE FROM TM_JOB WHERE JOB_CODE like '%PEMANEN%'  [] {"uid":"70b1ec3"}
[2017-01-14 14:56:41] TAP-FLOW.DEBUG: SELECT BANK_ID, BANK_NAME FROM TM_BANK WHERE LENGTH(BANK_ID) = 3  [] {"uid":"13430f4"}
